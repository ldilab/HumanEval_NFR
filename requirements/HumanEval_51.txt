# Problem Agnostic Requirements
- Ensure error-free execution, avoiding type errors, index errors, arithmetic operation errors (e.g., division by zero, overflow), and so on.
- Demonstrate efficiency in the algorithmic approach to problem-solving.
- Code should be clear, well-commented, and easy to understand and maintain.

# Functional Requirements
## Input-output Conditions
- The function takes a string `text` as input.
- It returns a string.

## Expected Behavior
- The function should remove all vowels (both lowercase and uppercase) from the input `text` and return the modified string.

## Edge Cases
- Handle an empty `text` input, returning an empty string.
- Handle the case where `text` contains only vowels, returning an empty string.
- Handle the case where `text` contains no vowels, returning the original string.

# Non-functional Requirements
## Performance
- Time complexity: O(n) where n is the length of the `text` string.
- Space complexity: O(n) where n is the length of the `text` string.
- Ensure efficiency even for extremely large inputs, providing results within 5 seconds.

## Specific Quality Requirements
### Robustness
- Handle non-string input.

### Reliability
- Avoid index errors while accessing `text` characters.

### Maintainability
- Target Cyclomatic Complexity: â‰¤ 10.