# Problem Agnostic Requirements
- Ensure error-free execution, avoiding type errors, index errors, and so on.
- Demonstrate efficiency in the algorithmic approach to problem-solving.
- Code should be clear, well-commented, and easy to understand and maintain.

# Functional Requirements
## Input-output Conditions
- The function takes a string `s` as input.
- It returns an integer, representing the number of vowels in the string.

## Expected Behavior
- The function should count the number of vowels in the given string.
- Vowels in this case are 'a', 'e', 'i', 'o', 'u'.
- The letter 'y' is also considered a vowel, but only when it is at the end of the given word.

## Edge Cases
- Handle an empty string as input, returning 0.
- Handle the case where no vowels are present in the string, returning 0.

# Non-functional Requirements
## Performance
- Time complexity: O(n) where n is the length of the string `s`.
- Space complexity: O(1).
- Ensure efficiency even for extremely large inputs, providing results within 5 seconds.

## Specific Quality Requirements
### Robustness
- Handle non-string input to the function.
- Handle uppercase characters in the string.
- Handle non-alphabet characters in the string.

### Reliability
- Ensure error-free execution by handling any potential exceptions.

### Maintainability
- Target Cyclomatic Complexity: â‰¤ 10.